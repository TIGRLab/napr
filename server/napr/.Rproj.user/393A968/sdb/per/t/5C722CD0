{
    "collab_server" : "",
    "contents" : "#' read .brainage_upload_file\n#' @param file.name The name of a file that is the aseg.stats, lh.aparc and rh.aparc files cat'ed together\n#' @return a matrix with the numbers laid out so the predictive model can read them\nread.upload.file <- function(file.name) {\n\ttrim.leading <- function (x)  sub(\"^\\\\s+\", \"\", x)\n\n\tmy.text <- readLines(file.name)\n\taseg.lines <- c(80:124)\n\n\taseg.text <- my.text[aseg.lines]\n\n\taseg.struct.name <- vector(length = length(aseg.lines))\n\taseg.vol <- vector(length = length(aseg.lines))\n\n\tfor (i in 1:length(aseg.lines)) {\n\n\t\ttemp <- strsplit(aseg.text[i],split = \" +\")\n\t\taseg.struct.name[i] <- temp[[1]][6]\n\t\taseg.vol[i] <- temp[[1]][5]\n\n\t}\n\n\t# more aseg data\n\tmore.aseg.lines <- c(14:34)\n\tmore.aseg.text <- my.text[more.aseg.lines]\n\n\tmore.aseg.struct.name <- vector(length = length(more.aseg.lines))\n\tmore.aseg.vol <- vector(length = length(more.aseg.lines))\n\n\tfor (i in 1:length(more.aseg.lines)) {\n\n\t\ttemp <- strsplit(more.aseg.text[i],split = \",\")\n\t\tmore.aseg.struct.name[i] <- trim.leading(temp[[1]][2])\n\t\tmore.aseg.vol[i] <- as.numeric(temp[[1]][4])\n\n\t}\n\n\t#aseg.data <- data.frame(struct.names = c(aseg.struct.name,more.aseg.struct.name), struct.vols = c(aseg.vol,more.aseg.vol))\n\n\tlh.aparc.lines <- c(178:211)\n\tlh.aparc.text <- my.text[lh.aparc.lines]\n\n\trh.aparc.lines <- c(265:298)\n\trh.aparc.text <- my.text[rh.aparc.lines]\n\n\tstruct.measures <- strsplit(my.text[177],\" \")[[1]]\n\tmeasure.order <- c(5,3,4,10,9,8,6)\n\tmeasure.names <- c(\"thickness\",\"area\",\"volume\",\"curvind\",\"foldind\",\"gauscurv\",\"thicknessstd\")\n\n\t# over all structures\n\t# lh_structure_thickness\n\tlh.thickness.struct.name <- vector(length = length(lh.aparc.lines))\n\tlh.thickness <- vector(length = length(lh.aparc.lines))\n\n\tmeasure <- measure.order[1]\n\tmeasure.id <- measure.names[1]\n\tfor (i in 1:length(lh.aparc.lines)) {\n\t\t# get measurement value\n\t\ttemp <- strsplit(lh.aparc.text[i],split = \" +\")\n\t\tlh.thickness[i] <- as.numeric(temp[[1]][measure])\n\t\tlh.thickness.struct.name[i] <- paste(\"lh\",temp[[1]][1],measure.id,sep=\"_\")\n\t}\n\t# add mean thickness\n\tlh.thickness <- c(lh.thickness,as.numeric(strsplit(my.text[145],split = \",\")[[1]][4]))\n\tlh.thickness.struct.name <- c(lh.thickness.struct.name,\"lh_MeanThickness_thickness\")\n\n\t# rh_structure_thickness\n\trh.thickness.struct.name <- vector(length = length(rh.aparc.lines))\n\trh.thickness <- vector(length = length(rh.aparc.lines))\n\tmeasure <- measure.order[1]\n\tmeasure.id <- measure.names[1]\n\tfor (i in 1:length(rh.aparc.lines)) {\n\t\t# get measurement value\n\t\ttemp <- strsplit(rh.aparc.text[i],split = \" +\")\n\t\trh.thickness[i] <- as.numeric(temp[[1]][measure])\n\t\trh.thickness.struct.name[i] <- paste(\"rh\",temp[[1]][1],measure.id,sep=\"_\")\n\t}\n\t# add mean thickness\n\trh.thickness <- c(rh.thickness,as.numeric(strsplit(my.text[232],split = \",\")[[1]][4]))\n\trh.thickness.struct.name <- c(rh.thickness.struct.name,\"rh_MeanThickness_thickness\")\n\n\t# lh_structure_area\n\tlh.area.struct.name <- vector(length = length(lh.aparc.lines))\n\tlh.area <- vector(length = length(lh.aparc.lines))\n\tmeasure <- measure.order[2]\n\tmeasure.id <- measure.names[2]\n\tfor (i in 1:length(lh.aparc.lines)) {\n\t\t# get measurement value\n\t\ttemp <- strsplit(lh.aparc.text[i],split = \" +\")\n\t\tlh.area[i] <- as.numeric(temp[[1]][measure])\n\t\tlh.area.struct.name[i] <- paste(\"lh\",temp[[1]][1],measure.id,sep=\"_\")\n\t}\n\t# add whitesurfarea\n\tlh.area <- c(lh.area,as.numeric(strsplit(my.text[144],split = \",\")[[1]][4]))\n\tlh.area.struct.name <- c(lh.area.struct.name,\"lh_WhiteSurfArea_area\")\n\n\t# rh_structure_area\n\trh.area.struct.name <- vector(length = length(rh.aparc.lines))\n\trh.area <- vector(length = length(rh.aparc.lines))\n\tmeasure <- measure.order[2]\n\tmeasure.id <- measure.names[2]\n\tfor (i in 1:length(rh.aparc.lines)) {\n\t\t# get measurement value\n\t\ttemp <- strsplit(rh.aparc.text[i],split = \" +\")\n\t\trh.area[i] <- as.numeric(temp[[1]][measure])\n\t\trh.area.struct.name[i] <- paste(\"rh\",temp[[1]][1],measure.id,sep=\"_\")\n\t}\n\t# add whitesurfarea\n\trh.area <- c(rh.area,as.numeric(strsplit(my.text[231],split = \",\")[[1]][4]))\n\trh.area.struct.name <- c(rh.area.struct.name,\"rh_WhiteSurfArea_area\")\n\n\t# lh_structure_volume\n\tlh.vol.struct.name <- vector(length = length(lh.aparc.lines))\n\tlh.vol <- vector(length = length(lh.aparc.lines))\n\tmeasure <- measure.order[3]\n\tmeasure.id <- measure.names[3]\n\tfor (i in 1:length(lh.aparc.lines)) {\n\t\t# get measurement value\n\t\ttemp <- strsplit(lh.aparc.text[i],split = \" +\")\n\t\tlh.vol[i] <- as.numeric(temp[[1]][measure])\n\t\tlh.vol.struct.name[i] <- paste(\"lh\",temp[[1]][1],measure.id,sep=\"_\")\n\t}\n\n\t# rh_structure_volume\n\trh.vol.struct.name <- vector(length = length(rh.aparc.lines))\n\trh.vol <- vector(length = length(rh.aparc.lines))\n\tmeasure <- measure.order[3]\n\tmeasure.id <- measure.names[3]\n\tfor (i in 1:length(rh.aparc.lines)) {\n\t\t# get measurement value\n\t\ttemp <- strsplit(rh.aparc.text[i],split = \" +\")\n\t\trh.vol[i] <- as.numeric(temp[[1]][measure])\n\t\trh.vol.struct.name[i] <- paste(\"rh\",temp[[1]][1],measure.id,sep=\"_\")\n\t}\n\n\t# lh_structure_curvind\n\tlh.curvind.struct.name <- vector(length = length(lh.aparc.lines))\n\tlh.curvind <- vector(length = length(lh.aparc.lines))\n\tmeasure <- measure.order[4]\n\tmeasure.id <- measure.names[4]\n\tfor (i in 1:length(lh.aparc.lines)) {\n\t\t# get measurement value\n\t\ttemp <- strsplit(lh.aparc.text[i],split = \" +\")\n\t\tlh.curvind[i] <- as.numeric(temp[[1]][measure])\n\t\tlh.curvind.struct.name[i] <- paste(\"lh\",temp[[1]][1],measure.id,sep=\"_\")\n\t}\n\n\t# rh_structure_curvind\n\trh.curvind.struct.name <- vector(length = length(rh.aparc.lines))\n\trh.curvind <- vector(length = length(rh.aparc.lines))\n\tmeasure <- measure.order[4]\n\tmeasure.id <- measure.names[4]\n\tfor (i in 1:length(rh.aparc.lines)) {\n\t\t# get measurement value\n\t\ttemp <- strsplit(rh.aparc.text[i],split = \" +\")\n\t\trh.curvind[i] <- as.numeric(temp[[1]][measure])\n\t\trh.curvind.struct.name[i] <- paste(\"rh\",temp[[1]][1],measure.id,sep=\"_\")\n\t}\n\n\t# lh_structure_foldind\n\tlh.foldind.struct.name <- vector(length = length(lh.aparc.lines))\n\tlh.foldind <- vector(length = length(lh.aparc.lines))\n\tmeasure <- measure.order[5]\n\tmeasure.id <- measure.names[5]\n\tfor (i in 1:length(lh.aparc.lines)) {\n\t\t# get measurement value\n\t\ttemp <- strsplit(lh.aparc.text[i],split = \" +\")\n\t\tlh.foldind[i] <- as.numeric(temp[[1]][measure])\n\t\tlh.foldind.struct.name[i] <- paste(\"lh\",temp[[1]][1],measure.id,sep=\"_\")\n\t}\n\n\t# rh_structure_foldind\n\trh.foldind.struct.name <- vector(length = length(rh.aparc.lines))\n\trh.foldind <- vector(length = length(rh.aparc.lines))\n\tmeasure <- measure.order[5]\n\tmeasure.id <- measure.names[5]\n\tfor (i in 1:length(rh.aparc.lines)) {\n\t\t# get measurement value\n\t\ttemp <- strsplit(rh.aparc.text[i],split = \" +\")\n\t\trh.foldind[i] <- as.numeric(temp[[1]][measure])\n\t\trh.foldind.struct.name[i] <- paste(\"rh\",temp[[1]][1],measure.id,sep=\"_\")\n\t}\n\n\t# lh_structure_gauscurv\n\tlh.gauscurv.struct.name <- vector(length = length(lh.aparc.lines))\n\tlh.gauscurv <- vector(length = length(lh.aparc.lines))\n\tmeasure <- measure.order[6]\n\tmeasure.id <- measure.names[6]\n\tfor (i in 1:length(lh.aparc.lines)) {\n\t\t# get measurement value\n\t\ttemp <- strsplit(lh.aparc.text[i],split = \" +\")\n\t\tlh.gauscurv[i] <- as.numeric(temp[[1]][measure])\n\t\tlh.gauscurv.struct.name[i] <- paste(\"lh\",temp[[1]][1],measure.id,sep=\"_\")\n\t}\n\n\t# rh_structure_gauscurv\n\trh.gauscurv.struct.name <- vector(length = length(rh.aparc.lines))\n\trh.gauscurv <- vector(length = length(rh.aparc.lines))\n\tmeasure <- measure.order[6]\n\tmeasure.id <- measure.names[6]\n\tfor (i in 1:length(rh.aparc.lines)) {\n\t\t# get measurement value\n\t\ttemp <- strsplit(rh.aparc.text[i],split = \" +\")\n\t\trh.gauscurv[i] <- as.numeric(temp[[1]][measure])\n\t\trh.gauscurv.struct.name[i] <- paste(\"rh\",temp[[1]][1],measure.id,sep=\"_\")\n\t}\n\n\t# lh_structure_thicknessstd\n\tlh.thicknessstd.struct.name <- vector(length = length(lh.aparc.lines))\n\tlh.thicknessstd <- vector(length = length(lh.aparc.lines))\n\tmeasure <- measure.order[7]\n\tmeasure.id <- measure.names[7]\n\tfor (i in 1:length(lh.aparc.lines)) {\n\t\t# get measurement value\n\t\ttemp <- strsplit(lh.aparc.text[i],split = \" +\")\n\t\tlh.thicknessstd[i] <- as.numeric(temp[[1]][measure])\n\t\tlh.thicknessstd.struct.name[i] <- paste(\"lh\",temp[[1]][1],measure.id,sep=\"_\")\n\t}\n\n\t# rh_structure_thicknessstd\n\trh.thicknessstd.struct.name <- vector(length = length(rh.aparc.lines))\n\trh.thicknessstd <- vector(length = length(rh.aparc.lines))\n\tmeasure <- measure.order[7]\n\tmeasure.id <- measure.names[7]\n\tfor (i in 1:length(rh.aparc.lines)) {\n\t\t# get measurement value\n\t\ttemp <- strsplit(rh.aparc.text[i],split = \" +\")\n\t\trh.thicknessstd[i] <- as.numeric(temp[[1]][measure])\n\t\trh.thicknessstd.struct.name[i] <- paste(\"rh\",temp[[1]][1],measure.id,sep=\"_\")\n\t}\n\n\tout.names <- c(aseg.struct.name,more.aseg.struct.name,lh.thickness.struct.name,rh.thickness.struct.name,lh.area.struct.name,rh.area.struct.name,lh.vol.struct.name,rh.vol.struct.name,lh.curvind.struct.name,rh.curvind.struct.name,lh.foldind.struct.name,rh.foldind.struct.name,lh.gauscurv.struct.name,rh.gauscurv.struct.name,lh.thicknessstd.struct.name,rh.thicknessstd.struct.name)\n\tout.values <- c(aseg.vol,more.aseg.vol,lh.thickness,rh.thickness,lh.area,rh.area,lh.vol,rh.vol,lh.curvind,rh.curvind,lh.foldind,rh.foldind,lh.gauscurv,rh.gauscurv,lh.thicknessstd,rh.thicknessstd)\n\n\tout.names[1:62] <- gsub(pattern = \"-\", replacement=\".\",out.names[1:62])\n\tout.names[66] <- \"EstimatedTotalIntraCranialVol\"\n\n\tout.matrix <- as.matrix(t(as.numeric(out.values)))\n\tcolnames(out.matrix) <- out.names\n\tout.matrix\n}\n",
    "created" : 1481576259285.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3362791187",
    "id" : "5C722CD0",
    "lastKnownWriteTime" : 1481731359,
    "last_content_update" : 1481731359,
    "path" : "~/Dropbox/brainage/software/server/napr/R/napr.file.reader.20160510.R",
    "project_path" : "R/napr.file.reader.20160510.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}